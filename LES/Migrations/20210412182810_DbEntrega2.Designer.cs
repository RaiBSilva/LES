// <auto-generated />
using System;
using LES.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LES.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210412182810_DbEntrega2")]
    partial class DbEntrega2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LES.Models.Entity.Ativacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ati_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("ati_cta_id");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("ati_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("ati_inativo");

                    b.Property<int>("LivroId")
                        .HasColumnType("int")
                        .HasColumnName("ati_liv_id");

                    b.HasKey("Id")
                        .HasName("PK_ATI");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("LivroId");

                    b.ToTable("ATIVACOES");
                });

            modelBuilder.Entity("LES.Models.Entity.BandeiraCartaoCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ban_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("ban_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("ban_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ban_nome");

                    b.HasKey("Id")
                        .HasName("PK_BAN");

                    b.ToTable("BANDEIRAS_CARTAO_CREDITO");
                });

            modelBuilder.Entity("LES.Models.Entity.CartaoCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("car_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BandeiraId")
                        .HasColumnType("int")
                        .HasColumnName("car_ban_id");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("car_codigo");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("car_cvv");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("car_dt_cadastro");

                    b.Property<bool>("EFavorito")
                        .HasColumnType("bit")
                        .HasColumnName("car_e_favorito");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("car_inativo");

                    b.Property<string>("NomeImpresso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("car_nome_impresso");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("car_vencimento");

                    b.HasKey("Id")
                        .HasName("PK_CAR");

                    b.HasIndex("BandeiraId");

                    b.HasIndex("ClienteId");

                    b.ToTable("CARTOES_CREDITO");
                });

            modelBuilder.Entity("LES.Models.Entity.CategoriaAtivacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cta_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("cta_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("cta_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cta_nome");

                    b.HasKey("Id")
                        .HasName("PK_CTA");

                    b.ToTable("CATEGORIAS_ATIVACAO");
                });

            modelBuilder.Entity("LES.Models.Entity.CategoriaInativacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cti_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("cti_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("cti_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cti_nome");

                    b.HasKey("Id")
                        .HasName("PK_CTI");

                    b.ToTable("CATEGORIAS_INATIVACAO");
                });

            modelBuilder.Entity("LES.Models.Entity.CategoriaLivro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ctl_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("ctl_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("ctl_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ctl_nome");

                    b.HasKey("Id")
                        .HasName("PK_CTL");

                    b.ToTable("CATEGORIAS_LIVRO");
                });

            modelBuilder.Entity("LES.Models.Entity.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cid_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("cid_dt_cadastro");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int")
                        .HasColumnName("cid_pai_id");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("cid_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cid_nome");

                    b.HasKey("Id")
                        .HasName("PK_CID");

                    b.HasIndex("EstadoId");

                    b.ToTable("CIDADES");
                });

            modelBuilder.Entity("LES.Models.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cli_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cli_codigo");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cli_cpf");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("cli_dt_cadastro");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("cli_dt_nascimento");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("cli_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cli_nome");

                    b.Property<int>("Nota")
                        .HasColumnType("int")
                        .HasColumnName("cli_nota");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("cli_usu_id");

                    b.HasKey("Id")
                        .HasName("PK_CLI");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("CLIENTES");
                });

            modelBuilder.Entity("LES.Models.Entity.Cupom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cup_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cup_cli_id");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("cup_codigo");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("cup_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("cup_inativo");

                    b.Property<double>("Valor")
                        .HasColumnType("float")
                        .HasColumnName("cup_valor");

                    b.HasKey("Id")
                        .HasName("PK_CUP");

                    b.HasIndex("ClienteId");

                    b.ToTable("CUPONS");
                });

            modelBuilder.Entity("LES.Models.Entity.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("edi_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("edi_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("edi_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("edi_nome");

                    b.HasKey("Id")
                        .HasName("PK_EDI");

                    b.ToTable("EDITORAS");
                });

            modelBuilder.Entity("LES.Models.Entity.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("end_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_cep");

                    b.Property<int>("CidadeId")
                        .HasColumnType("int")
                        .HasColumnName("end_cid_id");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_complemento");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_dt_cadastro");

                    b.Property<bool>("ECobranca")
                        .HasColumnType("bit")
                        .HasColumnName("end_e_cobranca");

                    b.Property<bool>("EEntrega")
                        .HasColumnType("bit")
                        .HasColumnName("end_e_entrega");

                    b.Property<bool>("EFavorito")
                        .HasColumnType("bit")
                        .HasColumnName("end_e_favorito");

                    b.Property<bool>("EResidencia")
                        .HasColumnType("bit")
                        .HasColumnName("end_e_residencia");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("end_inativo");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_logradouro");

                    b.Property<string>("NomeEndereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_nome_endereco");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_numero");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_observacoes");

                    b.Property<int>("TipoEnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("end_tpe_id");

                    b.HasKey("Id")
                        .HasName("PK_END");

                    b.HasIndex("CidadeId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoEnderecoId");

                    b.ToTable("ENDERECOS");
                });

            modelBuilder.Entity("LES.Models.Entity.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("est_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("est_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("est_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("est_nome");

                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("est_pai_id");

                    b.HasKey("Id")
                        .HasName("PK_EST");

                    b.HasIndex("PaisId");

                    b.ToTable("ESTADOS");
                });

            modelBuilder.Entity("LES.Models.Entity.GrupoPreco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gpp_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("gpp_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("gpp_inativo");

                    b.Property<double>("MargemLucro")
                        .HasColumnType("float")
                        .HasColumnName("gpp_margem_lucro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gpp_nome");

                    b.HasKey("Id")
                        .HasName("PK_GPP");

                    b.ToTable("GRUPO_PRECOS");
                });

            modelBuilder.Entity("LES.Models.Entity.Inativacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ina_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("ina_cta_id");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("ina_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("ina_inativo");

                    b.Property<int>("LivroId")
                        .HasColumnType("int")
                        .HasColumnName("ina_liv_id");

                    b.HasKey("Id")
                        .HasName("PK_INA");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("LivroId");

                    b.ToTable("INATIVACOES");
                });

            modelBuilder.Entity("LES.Models.Entity.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("liv_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Altura")
                        .HasColumnType("int")
                        .HasColumnName("liv_altura");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("liv_autor");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("liv_codigo_barras");

                    b.Property<int>("Comprimento")
                        .HasColumnType("int")
                        .HasColumnName("liv_comprimento");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("liv_dt_cadastro");

                    b.Property<int>("EditoraId")
                        .HasColumnType("int")
                        .HasColumnName("liv_edi_id");

                    b.Property<int>("Estoque")
                        .HasColumnType("int")
                        .HasColumnName("liv_estoque");

                    b.Property<int>("GrupoPrecoId")
                        .HasColumnType("int")
                        .HasColumnName("liv_gpp_id");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("liv_isbn");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("liv_inativo");

                    b.Property<int>("Largura")
                        .HasColumnType("int")
                        .HasColumnName("liv_largura");

                    b.Property<int>("NumPag")
                        .HasColumnType("int")
                        .HasColumnName("liv_num_pag");

                    b.Property<double>("Peso")
                        .HasColumnType("float")
                        .HasColumnName("liv_peso");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("liv_sinopse");

                    b.Property<double>("Valor")
                        .HasColumnType("float")
                        .HasColumnName("liv_valor");

                    b.HasKey("Id")
                        .HasName("PK_LIV");

                    b.HasIndex("EditoraId");

                    b.HasIndex("GrupoPrecoId");

                    b.ToTable("LIVROS");
                });

            modelBuilder.Entity("LES.Models.Entity.LivroCategoriaLivro", b =>
                {
                    b.Property<int>("LivroId")
                        .HasColumnType("int")
                        .HasColumnName("lcl_liv_id");

                    b.Property<int>("CategoriaLivroId")
                        .HasColumnType("int")
                        .HasColumnName("lcl_ctl_id");

                    b.HasKey("LivroId", "CategoriaLivroId")
                        .HasName("PK_LCL");

                    b.HasIndex("CategoriaLivroId");

                    b.ToTable("LIVROS_CATEGORIAS_LIVROS");
                });

            modelBuilder.Entity("LES.Models.Entity.LivroPedido", b =>
                {
                    b.Property<int>("LivroId")
                        .HasColumnType("int")
                        .HasColumnName("lip_liv_id");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("lip_ped_id");

                    b.Property<bool>("Trocado")
                        .HasColumnType("bit")
                        .HasColumnName("lip_trocado");

                    b.HasKey("LivroId", "PedidoId")
                        .HasName("PK_LIP");

                    b.HasIndex("PedidoId");

                    b.ToTable("LIVROS_PEDIDOS");
                });

            modelBuilder.Entity("LES.Models.Entity.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pai_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("pai_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("pai_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pai_nome");

                    b.HasKey("Id")
                        .HasName("PK_PAI");

                    b.ToTable("PAISES");
                });

            modelBuilder.Entity("LES.Models.Entity.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ped_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ped_cli_id");

                    b.Property<int?>("CupomId")
                        .HasColumnType("int")
                        .HasColumnName("ped_cup_id");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("ped_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("ped_inativo");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("ped_status");

                    b.HasKey("Id")
                        .HasName("PK_PED");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CupomId")
                        .IsUnique()
                        .HasFilter("[ped_cup_id] IS NOT NULL");

                    b.ToTable("PEDIDOS");
                });

            modelBuilder.Entity("LES.Models.Entity.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tel_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("tel_cli_id");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel_ddd");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("tel_dt_cadastro");

                    b.Property<bool>("EFavorito")
                        .HasColumnType("bit")
                        .HasColumnName("tel_e_favorito");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("tel_inativo");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel_numero");

                    b.Property<int>("TipoTelefoneId")
                        .HasColumnType("int")
                        .HasColumnName("tel_tpd_id");

                    b.HasKey("Id")
                        .HasName("PK_TEL");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoTelefoneId");

                    b.ToTable("TELEFONES");
                });

            modelBuilder.Entity("LES.Models.Entity.TipoEndereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tpe_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("tpe_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("tpe_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tpe_nome");

                    b.HasKey("Id")
                        .HasName("PK_TPE");

                    b.ToTable("TIPOS_ENDERECO");
                });

            modelBuilder.Entity("LES.Models.Entity.TipoTelefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tpt_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("tpt_dt_cadastro");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("tpt_inativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tpt_nome");

                    b.HasKey("Id")
                        .HasName("PK_TPT");

                    b.ToTable("TIPOS_TELEFONES");
                });

            modelBuilder.Entity("LES.Models.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usu_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("usu_dt_cadastro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usu_email");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit")
                        .HasColumnName("usu_inativo");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("usu_role");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usu_senha");

                    b.HasKey("Id")
                        .HasName("PK_USU");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("LES.Models.Entity.Ativacao", b =>
                {
                    b.HasOne("LES.Models.Entity.CategoriaAtivacao", "Categoria")
                        .WithMany("Ativacoes")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_ATI_CTA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.Livro", "Livro")
                        .WithMany("Ativacoes")
                        .HasForeignKey("LivroId")
                        .HasConstraintName("FK_ATI_LIV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LES.Models.Entity.CartaoCredito", b =>
                {
                    b.HasOne("LES.Models.Entity.BandeiraCartaoCredito", "Bandeira")
                        .WithMany("Cartoes")
                        .HasForeignKey("BandeiraId")
                        .HasConstraintName("FK_CAR_BAN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Bandeira");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LES.Models.Entity.Cidade", b =>
                {
                    b.HasOne("LES.Models.Entity.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_CID_EST")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("LES.Models.Entity.Cliente", b =>
                {
                    b.HasOne("LES.Models.Entity.Usuario", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("LES.Models.Entity.Cliente", "UsuarioId")
                        .HasConstraintName("FK_CLI_USU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LES.Models.Entity.Cupom", b =>
                {
                    b.HasOne("LES.Models.Entity.Cliente", "Cliente")
                        .WithMany("Cupons")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_CUP_CLI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LES.Models.Entity.Endereco", b =>
                {
                    b.HasOne("LES.Models.Entity.Cidade", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("CidadeId")
                        .HasConstraintName("FK_END_CID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.Cliente", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("LES.Models.Entity.TipoEndereco", "TipoEndereco")
                        .WithMany("Enderecos")
                        .HasForeignKey("TipoEnderecoId")
                        .HasConstraintName("FK_END_TPE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("TipoEndereco");
                });

            modelBuilder.Entity("LES.Models.Entity.Estado", b =>
                {
                    b.HasOne("LES.Models.Entity.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("PaisId")
                        .HasConstraintName("FK_EST_PAI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LES.Models.Entity.Inativacao", b =>
                {
                    b.HasOne("LES.Models.Entity.CategoriaInativacao", "Categoria")
                        .WithMany("Inativacoes")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_INA_CTA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.Livro", "Livro")
                        .WithMany("Inativacoes")
                        .HasForeignKey("LivroId")
                        .HasConstraintName("FK_INA_LIV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LES.Models.Entity.Livro", b =>
                {
                    b.HasOne("LES.Models.Entity.Editora", "Editora")
                        .WithMany("Livros")
                        .HasForeignKey("EditoraId")
                        .HasConstraintName("FK_LIV_EDI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.GrupoPreco", "GrupoPreco")
                        .WithMany("Livros")
                        .HasForeignKey("GrupoPrecoId")
                        .HasConstraintName("FK_LIV_GPP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editora");

                    b.Navigation("GrupoPreco");
                });

            modelBuilder.Entity("LES.Models.Entity.LivroCategoriaLivro", b =>
                {
                    b.HasOne("LES.Models.Entity.CategoriaLivro", "CategoriaLivro")
                        .WithMany("LivrosCategoriaLivros")
                        .HasForeignKey("CategoriaLivroId")
                        .HasConstraintName("FK_LCL_CTL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.Livro", "Livro")
                        .WithMany("LivrosCategoriaLivros")
                        .HasForeignKey("LivroId")
                        .HasConstraintName("FK_LCL_LIV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaLivro");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LES.Models.Entity.LivroPedido", b =>
                {
                    b.HasOne("LES.Models.Entity.Livro", "Livro")
                        .WithMany("LivroPedidos")
                        .HasForeignKey("LivroId")
                        .HasConstraintName("FK_LIP_LIV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.Pedido", "Pedido")
                        .WithMany("LivrosPedidos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK_LIP_PED")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LES.Models.Entity.Pedido", b =>
                {
                    b.HasOne("LES.Models.Entity.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_PED_PED")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.Cupom", "Cupom")
                        .WithOne("Pedido")
                        .HasForeignKey("LES.Models.Entity.Pedido", "CupomId")
                        .HasConstraintName("FK_PED_CUP");

                    b.Navigation("Cliente");

                    b.Navigation("Cupom");
                });

            modelBuilder.Entity("LES.Models.Entity.Telefone", b =>
                {
                    b.HasOne("LES.Models.Entity.Cliente", "Cliente")
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_TEL_CLI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LES.Models.Entity.TipoTelefone", "TipoTelefone")
                        .WithMany("Telefones")
                        .HasForeignKey("TipoTelefoneId")
                        .HasConstraintName("FK_TEL_TPT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoTelefone");
                });

            modelBuilder.Entity("LES.Models.Entity.BandeiraCartaoCredito", b =>
                {
                    b.Navigation("Cartoes");
                });

            modelBuilder.Entity("LES.Models.Entity.CategoriaAtivacao", b =>
                {
                    b.Navigation("Ativacoes");
                });

            modelBuilder.Entity("LES.Models.Entity.CategoriaInativacao", b =>
                {
                    b.Navigation("Inativacoes");
                });

            modelBuilder.Entity("LES.Models.Entity.CategoriaLivro", b =>
                {
                    b.Navigation("LivrosCategoriaLivros");
                });

            modelBuilder.Entity("LES.Models.Entity.Cidade", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("LES.Models.Entity.Cliente", b =>
                {
                    b.Navigation("Cupons");

                    b.Navigation("Enderecos");

                    b.Navigation("Pedidos");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("LES.Models.Entity.Cupom", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LES.Models.Entity.Editora", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("LES.Models.Entity.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("LES.Models.Entity.GrupoPreco", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("LES.Models.Entity.Livro", b =>
                {
                    b.Navigation("Ativacoes");

                    b.Navigation("Inativacoes");

                    b.Navigation("LivroPedidos");

                    b.Navigation("LivrosCategoriaLivros");
                });

            modelBuilder.Entity("LES.Models.Entity.Pais", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("LES.Models.Entity.Pedido", b =>
                {
                    b.Navigation("LivrosPedidos");
                });

            modelBuilder.Entity("LES.Models.Entity.TipoEndereco", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("LES.Models.Entity.TipoTelefone", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("LES.Models.Entity.Usuario", b =>
                {
                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
